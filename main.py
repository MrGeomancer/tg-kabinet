import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command, StateFilter
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.fsm.state import StatesGroup, State

from aiogram.fsm.context import FSMContext
import config

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(config.bot_token)
dp = Dispatcher()

class Sravn_State(StatesGroup):
    Sravnenie_gr_1 = State()
    Sravnenie_price_1 = State()
    Sravnenie_gr_2 = State()
    Sravnenie_price_2 = State()

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def reply_builder(message: types.Message):
    builder = ReplyKeyboardBuilder()
    builder.add(types.KeyboardButton(text='üìà –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–µ–π—Å—ã'))
    builder.add(types.KeyboardButton(text='üìà –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –≤–∞–ª—é—Ç—ã'))
    builder.add(types.KeyboardButton(text='üõí –°—Ä–∞–≤–Ω–∏—Ç—å —Ü–µ–Ω—ã'))
    builder.add(types.KeyboardButton(text='üë®‚Äçüè´ –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç'))

    builder.adjust(2)
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–≤–æ–π –∫–∞–±–∏–Ω–µ—Ç.\n–ö–∞–∫–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ —Ç—ã —Ö–æ—á–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è?",
        reply_markup=builder.as_markup(
            resize_keyboard=True,
            input_field_placeholder="–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ —Å –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º"
        )
    )
        
# @dp.message(Text("–°—Ä–∞–≤–Ω–∏—Ç—å —Ü–µ–Ω—ã"))
# async def

# @dp.message(Command("dice"))
# async def cmd_dice(message: types.Message):
#     await message.answer_dice("üé≤")
async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())