import asyncio
from aiogram.fsm.state import StatesGroup, State
from aiogram import F, Router, Bot, Dispatcher, html
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.fsm.context import FSMContext
from aiogram.enums import ParseMode
from aiogram.types import Message, ReplyKeyboardRemove, KeyboardButton

import config
from kabinet import cases, byones, money

router = Router()
router.include_routers(cases.router, money.router)


@router.message(F.text == "üë®‚Äçüè´ –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç")
async def kabinet_main_page(message: Message, state: FSMContext):
    # print('–∑–∞—à–µ–ª –≤ –∫–∞–±–∏–Ω–µ—Ç')
    await state.clear()
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text='üß∞ –ú–æ–∏ –∫–µ–π—Å—ã'))
    # builder.add(KeyboardButton(text='üí± –û–¥–∏–Ω–æ—á–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏'))
    builder.add(KeyboardButton(text='üí≤  –í–∞–ª—é—Ç–Ω—ã–µ'))
    builder.add(KeyboardButton(text='‚≠ïÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
    builder.adjust(2)
    await message.answer(text=f"–ü—Ä–∏–≤–µ—Ç {html.bold(html.quote(message.from_user.full_name))}, —Ç—É—Ç —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å "
                              "–≤–Ω–µ—Å–µ–Ω–Ω—É—é —Ç–æ–±–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ\n‚ó¶ –ö–µ–π—Å–∞–º \n"
                              # "‚ó¶ –û–¥–∏–Ω–æ—á–Ω—ã–º –ø–æ–∫—É–ø–∫–∞–º \n"
                              "‚ó¶ –í–∞–ª—é—Ç–∞–º,\n–∞ —Ç–∞–∫ –∂–µ, "
                              "–≤ —Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –∏–∑–º–µ–Ω–∏—Ç—å –µ—ë. –ù–∞ —á—Ç–æ —Å–º–æ—Ç—Ä–∏–º?",
                         reply_markup=builder.as_markup(resize_keyboard=True),
                         parse_mode=ParseMode.HTML,
                         )

@router.message(F.text == '‚óÄÔ∏è –ù–∞–∑–∞–¥', cases.Kabinet_—Åases_state.Kabinet_cases)
@router.message(F.text == '‚óÄÔ∏è –ù–∞–∑–∞–¥', money.Kabinet_money_state.Kabinet_money)
async def kabinet_back(message: Message, state: FSMContext):
    # print('–ø–æ–π–º–∞–ª –∫–æ–º–∞–Ω–¥—É –°—ä–µ–±–∞—Ç—å—Å—è')
    await state.clear()
    await kabinet_main_page(message, state)


async def kabinet_main():
    # –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    bot = Bot(config.bot_token)
    router = Dispatcher()
    await bot.delete_webhook(drop_pending_updates=True)
    await router.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(kabinet_main())
